(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{455:function(t,s,a){"use strict";a.r(s);var e=a(15),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"正则表达式-向前最短匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式-向前最短匹配"}},[t._v("#")]),t._v(" 正则表达式 向前最短匹配")]),t._v(" "),a("p",[t._v("使用正则表达式  "),a("code",[t._v(".*?")]),t._v("  可以向后匹配最短的，那么如何向前匹配最短的呢")]),t._v(" "),a("p",[t._v("向前的不再能使用 "),a("code",[t._v(".*?")]),t._v(" ，因为它会从第一个字母向后找，直到有匹配的，也就相当于找了一个最长的匹配")]),t._v(" "),a("p",[t._v("所以这时候应该换一种思路")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("a[^a]+")]),t._v(" 来匹配，也就是说要匹配的字符串前面不能有a，那就是最短的匹配")]),t._v(" "),a("p",[t._v("我们来看一个 Python 写的例子：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'```[^```]+'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" clipContent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'.*?```'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("我们要从 "),a("code",[t._v("clipContent")]),t._v(" 向前找到第一次出现 ```` ` ，所以思路应该是向前找到第一个你所想要的内容")]),t._v(" "),a("p",[a("a",{attrs:{href:"/listen-the-clipboard-and-match"}},[t._v("这里")]),t._v("有一个实际案例")])])}),[],!1,null,null,null);s.default=r.exports}}]);